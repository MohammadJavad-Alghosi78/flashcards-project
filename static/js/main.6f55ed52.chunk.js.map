{"version":3,"sources":["Flashcard.js","FlashcardList.js","App.js","index.js"],"names":["Flashcard","flashcard","React","useState","flip","setFlip","height","setHeight","frontEl","useRef","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","question","answer","options","window","addEventListener","removeEventListener","className","onClick","style","ref","map","option","FlashcardList","flashcards","id","App","setFlashcards","categories","setCategories","categoryEl","amountEl","decodeString","str","textArea","document","createElement","innerHTML","value","axios","get","then","res","data","results","questionItem","index","correct_answer","incorrect_answers","a","Date","now","sort","random","trivia_categories","onSubmit","event","preventDefault","params","amount","category","htmlFor","name","type","min","step","defaultValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6f55ed52.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Flashcard({ flashcard }) {\r\n  const [flip, setFlip] = React.useState(false);\r\n  const [height, setHeight] = React.useState('initial');\r\n\r\n  const frontEl = React.useRef();\r\n  const backEl = React.useRef();\r\n\r\n  const setMaxHeight = () => {\r\n    const frontHeight = frontEl.current.getBoundingClientRect().height;\r\n    const backHeight = backEl.current.getBoundingClientRect().height;\r\n    setHeight(Math.max(frontHeight, backHeight, 100));\r\n  }\r\n\r\n  React.useEffect(setMaxHeight,\r\n    [flashcard.question, flashcard.answer, flashcard.options]\r\n  )\r\n  React.useEffect(() => {\r\n    window.addEventListener('resize', setMaxHeight)\r\n    return window.removeEventListener('resize', setMaxHeight)\r\n  })\r\n\r\n  return (\r\n    <div\r\n      className={`card ${flip ? 'flip' : ''}`}\r\n      onClick={() => setFlip(!flip)}\r\n      style={{ height: height }}\r\n    >\r\n      <div className=\"front\" ref={frontEl}>\r\n        {flashcard?.question}\r\n        <div className=\"flashcard-options\">\r\n          {flashcard?.options?.map(option => {\r\n            return (\r\n              <div className=\"flashcard-option\" key={option}>\r\n                {option}\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"back\" ref={backEl}>\r\n        {flashcard?.answer}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Flashcard from './Flashcard'\r\n\r\nexport default function FlashcardList({ flashcards }) {\r\n  return (\r\n    <div className=\"card-grid\">\r\n      {flashcards?.map(flashcard => {\r\n        return <Flashcard flashcard={flashcard} key={flashcard?.id} />\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport FlashcardList from './FlashcardList';\n\nimport axios from 'axios';\n\nimport './app.css'\n\nfunction App() {\n  const [flashcards, setFlashcards] = React.useState([]);\n  const [categories, setCategories] = React.useState([]);\n\n  const categoryEl = React.useRef();\n  const amountEl = React.useRef();\n\n  const decodeString = str => {\n    const textArea = document.createElement('textarea');\n    textArea.innerHTML = str;\n    return textArea.value;\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    axios.get('https://opentdb.com/api.php?amount=10', {\n      params: {\n        amount: amountEl.current.value,\n        category: categoryEl.current.value\n      }\n    })\n      .then(res => {\n\n        setFlashcards(res.data.results.map((questionItem, index) => {\n          const answer = decodeString(questionItem?.correct_answer);\n          const options = [...questionItem.incorrect_answers?.map(a => decodeString(a)), answer];\n          return {\n            id: `${index}-${Date.now()}`,\n            question: decodeString(questionItem?.question),\n            answer: answer,\n            options: options.sort(() => Math.random() - 0.5)\n          }\n        }))\n      })\n  }\n\n  React.useEffect(() => {\n    axios.get('https://opentdb.com/api.php?amount=10')\n      .then(res => {\n        setFlashcards(res.data.results.map((questionItem, index) => {\n          const answer = decodeString(questionItem?.correct_answer);\n          const options = [...questionItem.incorrect_answers?.map(a => decodeString(a)), answer];\n          return {\n            id: `${index}-${Date.now()}`,\n            question: decodeString(questionItem?.question),\n            answer: answer,\n            options: options.sort(() => Math.random() - 0.5)\n          }\n        }))\n      })\n  }, [])\n\n  React.useEffect(() => {\n    axios.get(\"https://opentdb.com/api_category.php\")\n      .then(res => setCategories(res.data.trivia_categories))\n  })\n\n  return (\n    <>\n      <form className=\"header\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"category\">Category</label>\n          <select id=\"category\" ref={categoryEl}>\n            {categories?.map(category => {\n              return <option value={category?.id} key={category?.id}>{category?.name}</option>\n            })}\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">Number Of Questions</label>\n          <input type=\"number\" id=\"amount\" min=\"1\" step=\"1\" defaultValue={10} ref={amountEl} />\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn\">Generate</button>\n        </div>\n      </form>\n      <div className=\"container\">\n        <FlashcardList flashcards={flashcards} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}